# Generated by Django 4.1.2 on 2023-03-02 08:03

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssignTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.today)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_removed', models.BooleanField(default=False)),
                ('is_assigned', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'assign_ticket',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.today)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='ComputerLease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('computer_tag', models.CharField(blank=True, max_length=500, null=True)),
                ('full_name', models.CharField(max_length=500)),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('office_key', models.CharField(blank=True, max_length=500, null=True)),
                ('office_type', models.CharField(max_length=500)),
                ('windows_key', models.CharField(blank=True, max_length=500, null=True)),
                ('windows_type', models.CharField(max_length=500)),
                ('location', models.CharField(max_length=500)),
                ('bitlocker_recovery_keys', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.today, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'computers',
            },
        ),
        migrations.CreateModel(
            name='ReplyTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=datetime.datetime.today)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'reply_ticket',
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image_file', models.FileField(blank=True, null=True, upload_to='TicketFiles/')),
                ('status', models.CharField(max_length=50)),
                ('priority', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=datetime.datetime.today)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Tickets.category')),
            ],
            options={
                'db_table': 'tickets',
                'ordering': ['-ticket_number'],
                'permissions': [('change_status_ticket', 'Can change status tickets'), ('change_priority_ticket', 'Can change priority tickets')],
            },
        ),
    ]
